// api/webhook.js

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase —É–±—Ä–∞–Ω–∞, —á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å –æ—à–∏–±–∫–∏
// import { createClient } from '@supabase/supabase-js';

// 1. –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø TELEGRAM
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_API = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;

// 2. –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –û–¢–í–ï–¢–ê –í TELEGRAM
async function sendTelegramMessage(chatId, text) {
    const response = await fetch(`${TELEGRAM_API}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            chat_id: chatId,
            text: text,
            parse_mode: 'Markdown',
        }),
    });
    return response.json();
}

// 3. –û–°–ù–û–í–ù–û–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö (Webhook)
export default async (request, response) => {
    try {
        if (request.method !== 'POST') {
            return response.status(405).send('Only POST requests allowed');
        }

        const body = request.body;
        const message = body.message;

        if (!message || !message.text || !message.chat) {
            return response.status(200).send('No message to process');
        }

        const chatId = message.chat.id;
        const incomingText = message.text.trim();

        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        const welcomeMessage = `üëã –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –¢–æ–∫–µ–Ω Telegram —Ä–∞–±–æ—Ç–∞–µ—Ç. –í—Ö–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç: ${incomingText}`;
        await sendTelegramMessage(chatId, welcomeMessage);
        
        // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç 200 OK –¥–ª—è Telegram
        response.status(200).send('Processed');

    } catch (e) {
        console.error('Webhook processing failed:', e);
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–∫–∏ –≤ Telegram –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        await sendTelegramMessage(chatId, `–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${e.message}`); 
        response.status(500).send('Server Error');
    }
};
