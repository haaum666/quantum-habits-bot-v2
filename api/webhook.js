// api/webhook.js

import { createClient } from '@supabase/supabase-js';

// 1. –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø SUPABASE –ò TELEGRAM
const SUPABASE_URL = process.env.BOT_SUPABASE_URL;
const SUPABASE_SERVICE_KEY = process.env.SUPABASE_SERVICE_KEY; 
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_KEY); 
const TELEGRAM_API = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;

// 2. –ö–û–ù–°–¢–ê–ù–¢–´ –ö–õ–ê–í–ò–ê–¢–£–†–´
// ReplyKeyboard –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–∫—Ä—ã—Ç–∏–µ/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∏–∫–æ–Ω–∫—É
const COMPLETED_KEYBOARD = {
    keyboard: [
        [{ text: '‚úî –ì–æ—Ç–æ–≤–æ' }], // –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: —Å–∞–º–æ–µ —á–∞—Å—Ç–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
        [{ text: '‚è£ –ú–æ–π –ü—Ä–æ–≥—Ä–µ—Å—Å' }, { text: '‚öúÔ∏è –õ–∏–¥–µ—Ä–±–æ—Ä–¥' }] // –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: –æ—Ç—á–µ—Ç—ã
    ],
    resize_keyboard: true, // –î–µ–ª–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–æ–º–ø–∞–∫—Ç–Ω–æ–π
    one_time_keyboard: false, // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–µ –∏—Å—á–µ–∑–Ω–µ—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
};
// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–µ–Ω—é, –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è
const REMOVE_KEYBOARD = {
    remove_keyboard: true,
};


// 3. –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –û–¢–í–ï–¢–ê –í TELEGRAM
async function sendTelegramMessage(chatId, text, keyboard = null, parse_mode = 'Markdown') {
    const payload = {
        chat_id: chatId,
        text: text,
        parse_mode: parse_mode, 
    };

    if (keyboard) {
        payload.reply_markup = keyboard;
    }

    const response = await fetch(`${TELEGRAM_API}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload),
    });
    if (!response.ok) {
        console.error(`Telegram API Error: ${await response.text()}`);
    }
    return response.json();
}

// 4. –û–°–ù–û–í–ù–û–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö (Webhook)
export default async (request, response) => {
    
    if (request.method !== 'POST') {
        return response.status(405).send('Only POST requests allowed');
    }

    let body;
    try {
        const rawBody = await new Promise((resolve) => {
            let data = '';
            request.on('data', chunk => data += chunk);
            request.on('end', () => resolve(data));
        });
        body = JSON.parse(rawBody);

    } catch (e) {
        console.error('Body parsing failed:', e);
        return response.status(400).send('Invalid request body');
    }

    const message = body.message;

    if (!message || !message.text || !message.chat) {
        return response.status(200).send('No message to process');
    }

    const chatId = message.chat.id;
    const incomingText = message.text.trim();

    try {
        // A. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ.
        const { data: userData, error: userError } = await supabase
            .from('users') 
            .select('*') // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ø–æ–ª—è
            .eq('telegram_id', chatId)
            .single();

        if (userError && userError.code !== 'PGRST116') {
            console.error('Supabase Error (SELECT):', userError);
            await sendTelegramMessage(chatId, `–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ë–î. –ö–æ–¥: ${userError.code}.`, 'HTML');
            return response.status(500).send('Database Error');
        }
        
        // ===============================================
        // –õ–û–ì–ò–ö–ê 1: –ö–û–ú–ê–ù–î–ê /start (–ò–ª–∏ –ù–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
        // ===============================================
        const isStartCommand = incomingText.startsWith('/start');
        
        if (isStartCommand || !userData) {
            
            // 1. –í—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
            if (!userData) {
                const { error: insertError } = await supabase
                    .from('users')
                    .insert([{ telegram_id: chatId, onboarding_state: 'STEP_1' }]);
                
                if (insertError) {
                    if (insertError.code === '23505') {
                        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É.');
                    } else {
                        console.error('Insert Error:', insertError);
                        await sendTelegramMessage(chatId, `–û—à–∏–±–∫–∞ –ë–î (INSERT). –ö–æ–¥: ${insertError.code}.`, 'HTML');
                        return response.status(500).send('Database Insert Error');
                    }
                }
            }
            
            // 1.5. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if (isStartCommand && userData && userData.onboarding_state !== 'STEP_1') {
                 const { error: resetError } = await supabase
                    .from('users')
                    .update({ onboarding_state: 'STEP_1' })
                    .eq('telegram_id', chatId);

                if (resetError) {
                    console.error('Reset State Error:', resetError);
                    await sendTelegramMessage(chatId, `–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç—É—Å–∞: ${resetError.code}.`, 'HTML');
                }
                
                // –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–µ—Ä–µ–¥ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–æ–º, —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª–∞
                await sendTelegramMessage(chatId, '...', REMOVE_KEYBOARD, 'HTML');
            }
            
            // 2. –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
            const welcomeMessage = `üëã *–ü—Ä–∏–≤–µ—Ç!* –Ø —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –º–µ—Ç–æ–¥—É \"–ê—Ç–æ–º–Ω—ã—Ö –ü—Ä–∏–≤—ã—á–µ–∫\".\n\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–≤–µ–¥—É—Ç –∫ 1% —É–ª—É—á—à–µ–Ω–∏—é –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. \n\n–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å –≥–ª–∞–≤–Ω–æ–≥–æ.`;
            await sendTelegramMessage(chatId, welcomeMessage);
            
            await sendTelegramMessage(chatId, "*–®–ê–ì 1 –∏–∑ 10: –ö–ï–ú —Ç—ã —Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å?*\n\n–í—Å—è —Å–∏–ª–∞ –≤ –ò–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏. –ù–∞–ø–∏—à–∏, –∫–µ–º —Ç—ã —Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–≤–æ–∏–º –ø—Ä–∏–≤—ã—á–∫–∞–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"–ó–¥–æ—Ä–æ–≤—ã–º –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–º\", \"–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–º –∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω—ã–º\", \"–û–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–º –∏ —Ä–∞–∑–≤–∏—Ç—ã–º\").");

        // ===============================================
        // –õ–û–ì–ò–ö–ê 2: –û–ë–†–ê–ë–û–¢–ö–ê –¢–ï–ö–°–¢–ê (–û–Ω–±–æ—Ä–¥–∏–Ω–≥ –∏ –†–∞–±–æ—á–∏–π –†–µ–∂–∏–º)
        // ===============================================
        } else {
            const currentStep = userData.onboarding_state;
            const textToSave = incomingText.substring(0, 100);
            let updatePayload = {};
            let confirmationMessage = '';
            let nextQuestion = '';

            // –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê –î–õ–Ø –†–ê–ë–û–ß–ï–ì–û –†–ï–ñ–ò–ú–ê (COMPLETED)
            if (currentStep === 'COMPLETED') {
                const habitName = userData.habit_micro_step || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
                const identity = userData.desired_identity || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
                
                // 1. –ö–û–ú–ê–ù–î–ê /stats –∏–ª–∏ –ö–ù–û–ü–ö–ê
                if (incomingText.startsWith('/stats') || incomingText === '‚è£ –ú–æ–π –ü—Ä–æ–≥—Ä–µ—Å—Å') {
                    
                    confirmationMessage = `üìä *–¢–í–û–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê* (–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)\n\n*–¢–µ–∫—É—â–∞—è –ü—Ä–∏–≤—ã—á–∫–∞:* ${habitName}\n*–ò–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å:* ${identity}\n\n*–¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è:* 0 –¥–Ω–µ–π (–ù–∞—á–Ω–∏—Ç–µ –ª–æ–≥–≥–∏—Ä–æ–≤–∞—Ç—å!)\n*–í—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤ –∑–∞ –ò–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å:* ${userData.habit_votes_count || 0}\n\n–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ–∂–∏–¥–∞–π—Ç–µ –Ω–æ—á–Ω–æ–π –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç.`;
                    
                // 2. –ö–û–ú–ê–ù–î–ê /leaderboard –∏–ª–∏ –ö–ù–û–ü–ö–ê
                } else if (incomingText.startsWith('/leaderboard') || incomingText === '‚öúÔ∏è –õ–∏–¥–µ—Ä–±–æ—Ä–¥') { 
    
                    confirmationMessage = `üèÜ *–õ–ò–î–ï–†–ë–û–†–î* (–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)\n\n–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∂–µ—Ç –≤–∞—à —Ä–∞–Ω–≥ —Å—Ä–µ–¥–∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. \n\n_–ü–æ–º–Ω–∏—Ç–µ: –∫–∞–∂–¥—ã–π –≥–æ–ª–æ—Å –∑–∞ –ò–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–≤–∏–≥–∞–µ—Ç –≤–∞—Å –≤–≤–µ—Ä—Ö._`;

                // 3. –ö–û–ú–ê–ù–î–ê /done (–õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ) –∏–ª–∏ –ö–ù–û–ü–ö–ê
                } else if (incomingText.startsWith('/done') || incomingText.startsWith('/yes') || incomingText === '‚úî –ì–æ—Ç–æ–≤–æ') {
                    
                    const newVoteCount = (userData.habit_votes_count || 0) + 1;
                    
                    const { error: voteError } = await supabase
                        .from('users')
                        .update({ 
                            habit_votes_count: newVoteCount,
                        })
                        .eq('telegram_id', chatId);

                    if (voteError) {
                        console.error('Vote Error:', voteError);
                        confirmationMessage = `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–∏: ${voteError.code}.`;
                    } else {
                        confirmationMessage = `üî• *–í–´–ü–û–õ–ù–ï–ù–û!* üî•\n\n–¢–≤–æ—è –ø—Ä–∏–≤—ã—á–∫–∞: *${habitName}* –∑–∞—á—Ç–µ–Ω–∞.\n\n–≠—Ç–æ *${newVoteCount}-–π –≥–æ–ª–æ—Å* –∑–∞ —Ç–≤–æ—é –ò–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å: *${identity}*.\n\n_–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Ç—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è –Ω–∞ 1% –ª—É—á—à–µ._`;
                    }
                
                // 4. –û–ë–´–ß–ù–´–ô –¢–ï–ö–°–¢ (–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞)
                } else {
                    confirmationMessage = `–¢—ã —É–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª –æ–Ω–±–æ—Ä–¥–∏–Ω–≥! –¢–≤–æ—è –ø—Ä–∏–≤—ã—á–∫–∞: ${habitName}. \n\n_–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –æ—Ç—á–µ—Ç–∞._`;
                }

                nextQuestion = null;
                
                // –õ–û–ì–ò–ö–ê –û–¢–ü–†–ê–í–ö–ò –ö–õ–ê–í–ò–ê–¢–£–†–´
                await sendTelegramMessage(chatId, confirmationMessage, COMPLETED_KEYBOARD);
                return response.status(200).send('Processed');

            } else {
                
                // --- –õ–û–ì–ò–ö–ê –û–ù–ë–û–†–î–ò–ù–ì–ê (STEP_1 - STEP_10) ---
                switch (currentStep) {
                    case 'STEP_1':
                        updatePayload = { desired_identity: textToSave, onboarding_state: 'STEP_2' };
                        confirmationMessage = `–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ –ò–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å: *${textToSave}*.\n\n–ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –≤—ã –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –ø—Ä–∏–≤—ã—á–∫—É, –≤—ã –≥–æ–ª–æ—Å—É–µ—Ç–µ –∑–∞ —ç—Ç—É –ª–∏—á–Ω–æ—Å—Ç—å.`;
                        nextQuestion = "*–®–ê–ì 2 –∏–∑ 10: –ß—Ç–æ —Ç—ã –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?*\n\n–í—Å–ø–æ–º–Ω–∏—Ç–µ –ü—Ä–∞–≤–∏–ª–æ –î–≤—É—Ö –ú–∏–Ω—É—Ç: –õ—é–±–∞—è –ø—Ä–∏–≤—ã—á–∫–∞ –¥–æ–ª–∂–Ω–∞ –∑–∞–Ω–∏–º–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 2 –º–∏–Ω—É—Ç.\n\n–ù–∞–ø–∏—à–∏, –∫–∞–∫—É—é –º–∏–∫—Ä–æ-–ø—Ä–∏–≤—ã—á–∫—É —Ç—ã –≥–æ—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω—è—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"–û—Ç–∂–∞—Ç—å—Å—è 1 —Ä–∞–∑\", \"–ü—Ä–æ—á–∏—Ç–∞—Ç—å 1 —Å—Ç—Ä–∞–Ω–∏—Ü—É\", \"–í—ã–ø–∏—Ç—å 1 —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã\").";
                        break;
                    case 'STEP_2':
                        updatePayload = { habit_micro_step: textToSave, onboarding_state: 'STEP_3' };
                        confirmationMessage = `–•–æ—Ä–æ—à–æ. –í–∞—à–∞ –º–∏–∫—Ä–æ-–ø—Ä–∏–≤—ã—á–∫–∞: *${textToSave}*.\n\n–ü–æ–º–Ω–∏—Ç–µ: –Ω–∞—á–∏–Ω–∞—Ç—å –Ω—É–∂–Ω–æ —Å –ª–µ–≥–∫–æ–≥–æ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å.\n\n*–ü—Ä–∞–≤–∏–ª–æ 3: –°–¥–µ–ª–∞–π—Ç–µ –µ–µ –õ–µ–≥–∫–æ–π.*`;
                        nextQuestion = "*–®–ê–ì 3 –∏–∑ 10: –ì–¥–µ —Ç—ã —ç—Ç–æ —Å–¥–µ–ª–∞–µ—à—å?*\n\n–ú—ã –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é –ø—Ä–∏–≤—ã—á–∫—É –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –¥–µ–π—Å—Ç–≤–∏—é. –≠—Ç–æ \"–°–≤—è–∑—ã–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–µ–∫\".\n\n–ù–∞–ø–∏—à–∏, –ø–æ—Å–ª–µ –∫–∞–∫–æ–≥–æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è —Ç—ã –≤—ã–ø–æ–ª–Ω–∏—à—å —ç—Ç—É –ø—Ä–∏–≤—ã—á–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –∑–∞–≤–∞—Ä—é —É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ—Ñ–µ\", \"–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø–æ—á–∏—â—É –∑—É–±—ã\", \"–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —Å—è–¥—É –∑–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª\").";
                        break;
                    case 'STEP_3':
                        updatePayload = { habit_link_action: textToSave, onboarding_state: 'STEP_4' };
                        confirmationMessage = `–ó–∞–ø–æ–º–Ω–µ–Ω–æ. –í—ã –±—É–¥–µ—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø—Ä–∏–≤—ã—á–∫—É *–ü–û–°–õ–ï* —Ç–æ–≥–æ, –∫–∞–∫: *${textToSave}*.\n\n*–ü—Ä–∞–≤–∏–ª–æ 4: –°–¥–µ–ª–∞–π—Ç–µ –µ–µ –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–π.*`;
                        nextQuestion = "*–®–ê–ì 4 –∏–∑ 10: –ß–µ–º —Ç—ã —Å–µ–±—è –Ω–∞–≥—Ä–∞–¥–∏—à—å?*\n\n–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–∏–∫–ª–∞ –ø—Ä–∏–≤—ã—á–∫–∏ (–ü–æ–¥—Å–∫–∞–∑–∫–∞ -> –î–µ–π—Å—Ç–≤–∏–µ -> –ù–∞–≥—Ä–∞–¥–∞) –Ω—É–∂–Ω–æ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ.\n\n–ù–∞–ø–∏—à–∏, —á–µ–º —Ç—ã —Å–µ–±—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –Ω–∞–≥—Ä–∞–¥–∏—à—å –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–∫—Ä–æ-–ø—Ä–∏–≤—ã—á–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"–í—ã–ø—å—é —á–∞—à–∫—É —á–∞—è —Å –ª–∏–º–æ–Ω–æ–º\", \"–°–¥–µ–ª–∞—é 5 –º–∏–Ω—É—Ç —Ä–∞—Å—Ç—è–∂–∫–∏\", \"–ü—Ä–æ—Å–º–æ—Ç—Ä—é 1 –º–∏–Ω—É—Ç—É –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –ª–µ–Ω—Ç—ã\").";
                        break;
                    case 'STEP_4':
                        updatePayload = { habit_reward: textToSave, onboarding_state: 'STEP_5' };
                        confirmationMessage = `–ò–¥–µ–∞–ª—å–Ω–æ. –ù–∞–≥—Ä–∞–¥–∞: *${textToSave}*.\n\n–≠—Ç–æ —Å–æ–∑–¥–∞–µ—Ç –ø–µ—Ç–ª—é –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏: –º–æ–∑–≥ –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Ñ–∞–º–∏–Ω –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω—É–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä—è—Ç—å.`;
                        nextQuestion = "*–®–ê–ì 5 –∏–∑ 10: –ö–∞–∫–∏–º —Ç—Ä–µ–∫–µ—Ä–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è?*\n\n–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–º–æ–≥–∞–µ—Ç —É–≤–∏–¥–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å.\n\n–ù–∞–ø–∏—à–∏, –∫–∞–∫–æ–π —Ç—Ä–µ–∫–µ—Ä —Ç—ã –±—É–¥–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Loop\", \"–õ–∏—Å—Ç –±—É–º–∞–≥–∏ –∏ —Ä—É—á–∫–∞\", \"–û—Ç–º–µ—Ç–∫–∞ –≤ –∑–∞–º–µ—Ç–∫–∞—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–∞\").";
                        break;
                    case 'STEP_5':
                        updatePayload = { habit_tracker: textToSave, onboarding_state: 'STEP_6' };
                        confirmationMessage = `–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç—Ä–µ–∫–µ—Ä: *${textToSave}*.\n\n–¶–µ–ª—å —Ç—Ä–µ–∫–µ—Ä–∞ - –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å, –Ω–æ –∏ —Å–æ–∑–¥–∞—Ç—å –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª, —á—Ç–æ –ø—Ä–∏–≤—ã—á–∫–∞ –Ω–µ –±—ã–ª–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞.`;
                        nextQuestion = "*–®–ê–ì 6 –∏–∑ 10: –ö–∞–∫ –Ω–∞–∑–≤–∞—Ç—å –ø—Ä–∏–≤—ã—á–∫—É –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏?*\n\n–î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –Ω—É–∂–Ω–∞ –∫–æ—Ä–æ—Ç–∫–∞—è, –ª–µ–≥–∫–æ —É–∑–Ω–∞–≤–∞–µ–º–∞—è —Ñ—Ä–∞–∑–∞.\n\n–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–∏–≤—ã—á–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"1–æ—Ç–∂–∏–º\", \"1—Å—Ç—Ä–∫–Ω–∏–≥–∞\", \"–í–æ–¥–∞1—Å—Ç–∞–∫\").";
                        break;
                    case 'STEP_6':
                        updatePayload = { habit_identifier: textToSave, onboarding_state: 'STEP_7' };
                        confirmationMessage = `–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: *${textToSave}*.\n\n–¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ —Ç—ã —É–≤–∏–¥–∏—à—å —ç—Ç–æ—Ç ID, —Ç—ã —Ç–æ—á–Ω–æ –±—É–¥–µ—à—å –∑–Ω–∞—Ç—å, —á—Ç–æ –Ω—É–∂–Ω–æ –æ—Ç–º–µ—Ç–∏—Ç—å.`;
                        nextQuestion = "*–®–ê–ì 7 –∏–∑ 10: –ö–∞–∫–æ–µ –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ?*\n\n–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–ª–∞ - –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É. –ß—Ç–æ –≤–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ –ø–æ–º–µ—à–∞–µ—Ç —Ç–µ–±–µ —Å–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞?\n\n–ù–∞–ø–∏—à–∏ –æ–¥–Ω–æ —Å–∞–º–æ–µ –≤–µ—Ä–æ—è—Ç–Ω–æ–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"–£—Å—Ç–∞–ª–æ—Å—Ç—å –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã\", \"–ó–∞–±—É–¥—É –æ –ø—Ä–∏–≤—ã—á–∫–µ\", \"–ù–µ —Ö–≤–∞—Ç–∏—Ç –≤—Ä–µ–º–µ–Ω–∏\").";
                        break;
                    case 'STEP_7':
                        updatePayload = { obstacle_plan_1: textToSave, onboarding_state: 'STEP_8' };
                        confirmationMessage = `–ü—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ: *${textToSave}*.\n\n–ú—ã –≥–æ—Ç–æ–≤—ã –∫ –±–æ—Ä—å–±–µ.`;
                        nextQuestion = `*–®–ê–ì 8 –∏–∑ 10: –ü–ª–∞–Ω –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏—è?*\n\n–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç *${textToSave}*, —Ç–æ —á—Ç–æ —Ç—ã —Å–¥–µ–ª–∞–µ—à—å?\n\n–ù–∞–ø–∏—à–∏ –ø–ª–∞–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–ï—Å–ª–∏ —É—Å—Ç–∞–Ω—É, —Å–¥–µ–ª–∞—é –æ—Ç–∂–∏–º–∞–Ω–∏–µ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø—Ä–∏–¥—É –¥–æ–º–æ–π", "–ï—Å–ª–∏ –∑–∞–±—É–¥—É, –ø–æ—Å—Ç–∞–≤–ª—é –±—É–¥–∏–ª—å–Ω–∏–∫ –Ω–∞ 17:00").`;
                        break;
                    case 'STEP_8':
                        updatePayload = { obstacle_plan_2: textToSave, onboarding_state: 'STEP_9' };
                        confirmationMessage = `–ü–ª–∞–Ω –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏—è: *${textToSave}*.\n\n–¢—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª —Å–µ–±—è –∫ —É—Å–ø–µ—Ö—É. –ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –ø–æ–ª–∞–≥–∞—Ç—å—Å—è –Ω–∞ –º–æ—Ç–∏–≤–∞—Ü–∏—é.`;
                        nextQuestion = "*–®–ê–ì 9 –∏–∑ 10: –ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ –ø—Ä–æ–ø—É—Å–∫–µ?*\n\n–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–π –ø—Ä–∏–≤—ã—á–∫—É *–¥–≤–∞–∂–¥—ã –ø–æ–¥—Ä—è–¥*. –≠—Ç–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ.\n\n–ù–∞–ø–∏—à–∏, –∫–∞–∫ —Ç—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –≤–µ—Ä–Ω–µ—à—å—Å—è –∫ –ø—Ä–∏–≤—ã—á–∫–µ –ø–æ—Å–ª–µ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–ø—É—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"–ù–∞—á–Ω—É —Å–æ –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω—ã –¥–Ω—è\", \"–°–¥–µ–ª–∞—é –µ–µ —Å—Ä–∞–∑—É –∂–µ, –∫–∞–∫ –≤—Å–ø–æ–º–Ω—é, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏\").";
                        break;
                    case 'STEP_9':
                        updatePayload = { failure_plan: textToSave, onboarding_state: 'STEP_10' };
                        confirmationMessage = `–ü—Ä–∞–≤–∏–ª–æ –ø—Ä–∏ –ø—Ä–æ–ø—É—Å–∫–µ: *${textToSave}*.\n\n–≠—Ç–æ –∑–∞—â–∏—â–∞–µ—Ç —Ç–µ–±—è –æ—Ç —Å—Ä—ã–≤–∞. –û–¥–∏–Ω –ø—Ä–æ–ø—É—Å–∫ - —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å. –î–≤–∞ - –Ω–∞—á–∞–ª–æ –Ω–æ–≤–æ–π, –ø–ª–æ—Ö–æ–π –ø—Ä–∏–≤—ã—á–∫–∏.`;
                        nextQuestion = "*–®–ê–ì 10 –∏–∑ 10: –í—Ä–µ–º—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è?*\n\n–ß—Ç–æ–±—ã —è –º–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ —Å–æ–±–∏—Ä–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –Ω—É–∂–Ω–æ –≤—Ä–µ–º—è.\n\n–ù–∞–ø–∏—à–∏ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ —Ç—ã –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø—Ä–∏–≤—ã—á–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"18:30\", \"8:00\", \"–°—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–±–µ–¥–∞\").";
                        break;
                    case 'STEP_10':
                        // –§–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥!
                        updatePayload = { repetition_schedule: textToSave, onboarding_state: 'COMPLETED' };
                        
                        // 1. –û–±–Ω–æ–≤–ª—è–µ–º –ë–î (–∫–∞–∫ –æ–±—ã—á–Ω–æ)
                        const { error: updateErrorStep10 } = await supabase
                            .from('users')
                            .update(updatePayload)
                            .eq('telegram_id', chatId);

                        if (updateErrorStep10) {
                            console.error(`Update Error (STEP_10):`, updateErrorStep10);
                            await sendTelegramMessage(chatId, `–û—à–∏–±–∫–∞ –ë–î (UPDATE). –ö–æ–¥: ${updateErrorStep10.code}.`, 'HTML');
                            return response.status(500).send('Database Update Error');
                        }
                        
                        // 2. –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π –æ–±—ä–µ–∫—Ç userData, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω,
                        // –∏ –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –∏–∑ –ø–∞–º—è—Ç–∏ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                        const finalData = { ...userData, ...updatePayload };

                        // 3. –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        confirmationMessage = `üéâ *–û–ë–û–†–î–ò–ù–ì –ó–ê–í–ï–†–®–ï–ù!* üéâ\n\n–¢—ã –≥–æ—Ç–æ–≤! –Ø –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ *${textToSave}*.\n\n–¢–≤–æ—è –ø–æ–ª–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞:\n*–ò–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å:* ${finalData.desired_identity || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n*–ü—Ä–∏–≤—ã—á–∫–∞:* ${finalData.habit_micro_step || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n*–°–≤—è–∑–∫–∞:* ${finalData.habit_link_action || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n*–ù–∞–≥—Ä–∞–¥–∞:* ${finalData.habit_reward || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n*–¢—Ä–µ–∫–µ—Ä:* ${finalData.habit_tracker || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n\n*–ù–∞—á–Ω–∏ —Å–µ–π—á–∞—Å:* –¢–≤–æ—è –ø–µ—Ä–≤–∞—è –ø—Ä–∏–≤—ã—á–∫–∞: ${finalData.habit_micro_step || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'} –°–†–ê–ó–£ –ü–û–°–õ–ï ${finalData.habit_link_action || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}.`;
                        nextQuestion = null;
                        
                        // –û–¢–ü–†–ê–í–ö–ê –° –ö–õ–ê–í–ò–ê–¢–£–†–û–ô!
                        await sendTelegramMessage(chatId, confirmationMessage, COMPLETED_KEYBOARD);
                        return response.status(200).send('Processed');

                    default:
                        confirmationMessage = `–û—à–∏–±–∫–∞! –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞: *${currentStep}*.\n\n–ù–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.`;
                        nextQuestion = null;
                }
            }
            
            // –ï—Å–ª–∏ –º—ã –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ 'COMPLETED' –∏ –Ω–µ –≤ 'STEP_10', –ø—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –ë–î
            if (currentStep !== 'STEP_10' && currentStep !== 'COMPLETED') { 
                
                const { error: updateError } = await supabase
                    .from('users')
                    .update(updatePayload)
                    .eq('telegram_id', chatId);

                if (updateError) {
                    console.error(`Update Error (${currentStep}):`, updateError);
                    await sendTelegramMessage(chatId, `–û—à–∏–±–∫–∞ –ë–î (UPDATE). –ö–æ–¥: ${updateError.code}.`, 'HTML');
                    return response.status(500).send('Database Update Error');
                }
            }
            
            // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ (–∫—Ä–æ–º–µ STEP_10, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤—ã—à–µ)
            if (currentStep !== 'STEP_10') {
                await sendTelegramMessage(chatId, confirmationMessage);
                if (nextQuestion) {
                    await sendTelegramMessage(chatId, nextQuestion);
                }
            }
        }
        
        response.status(200).send('Processed');

    } catch (e) {
        console.error('Webhook processing failed (uncaught):', e);
        response.status(500).send('Server Error');
    }
};
